get:
  tags:
    - me
  summary: Returns jokes of the current user
  operationId: MeJokesGet
  parameters:
    - $ref: "../../components/parameters/query_select_params.yaml"
  security:
    - bearerAuth: []
  responses:
    "200":
      $ref: "../../components/responses/jokes.yaml"
    default:
      $ref: "../../components/responses/code_error.yaml"
post:
  tags:
    - me
  summary: Creates a new joke for current user
  operationId: MeJokesPost
  security:
    - bearerAuth: []
  requestBody:
    description: Data to create a new joke for current user
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            title:
              type: string
              example: "Joke title"
            text:
              type: string
              example: "Joke text"
            explanation:
              type: string
              example: "Joke explanation"
          required:
            - user_id
            - title
            - text
  responses:
    "201":
      $ref: "../../components/responses/joke.yaml"
    default:
      $ref: "../../components/responses/code_error.yaml"
put:
  tags:
    - me
  summary: Updates joke for current user
  operationId: MeJokesPut
  security:
    - bearerAuth: []
  requestBody:
    description: Data to update the joke for current user
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            joke_id:
              type: string
              example: "48690945-c3f9-45b4-9045-c6bcfb898f20"
            title:
              type: string
              example: "Joke title"
            text:
              type: string
              example: "Joke text"
            explanation:
              type: string
              example: "Joke explanation"
          required:
            - joke_id
  responses:
    "201":
      $ref: "../../components/responses/joke.yaml"
    default:
      $ref: "../../components/responses/code_error.yaml"
delete:
  tags:
    - me
  summary: Deletes joke for current user
  operationId: MeJokesDel
  security:
    - bearerAuth: []
  requestBody:
    description: Data to delete the joke for current user
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            joke_id:
              type: string
              example: "48690945-c3f9-45b4-9045-c6bcfb898f20"
          required:
            - joke_id
  responses:
    "204":
      description: Joke deleted
    default:
      $ref: "../../components/responses/code_error.yaml"
