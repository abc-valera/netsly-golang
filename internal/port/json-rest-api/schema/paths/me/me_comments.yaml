post:
  tags:
    - me
  summary: Creates a comment for the current user and the current joke
  operationId: MeCommentsPost
  security:
    - bearerAuth: []
  requestBody:
    description: Create Comment Request
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            joke_id:
              type: string
              example: "1"
            text:
              type: string
              example: Text of comment 1
          required:
            - user_id
            - joke_id
            - text
  responses:
    "200":
      $ref: "../../components/responses/comment.yaml"
    default:
      $ref: "../../components/responses/code_error.yaml"
put:
  tags:
    - me
  summary: Updates a comment of the current user
  operationId: MeCommentsPut
  security:
    - bearerAuth: []
  requestBody:
    description: Update Comment Request
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            comment_id:
              type: string
              example: "1"
            text:
              type: string
              example: Text of comment 1
          required:
            - comment_id
  responses:
    "200":
      $ref: "../../components/responses/comment.yaml"
    default:
      $ref: "../../components/responses/code_error.yaml"
delete:
  tags:
    - me
  summary: Deletes a comment of the current user
  operationId: MeCommentsDel
  security:
    - bearerAuth: []
  requestBody:
    description: Delete Comment Request
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            comment_id:
              type: string
              example: "1"
          required:
            - comment_id
  responses:
    "204":
      description: Comment deleted
    default:
      $ref: "../../components/responses/code_error.yaml"
