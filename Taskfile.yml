# https://taskfile.dev

version: "3"

tasks:
  entrypoint:json-rest-api:
    dotenv: ["env/dev.env"]
    cmds:
      - go build -o build/json-rest-api cmd/json-rest-api/main.go
      - ./build/json-rest-api

  entrypoint:web-app:
    dotenv: ["env/dev.env"]
    cmds:
      - go build -o build/web-app cmd/web-app/main.go
      - ./build/web-app

  entrypoint:grpc-api:
    dotenv: ["env/dev.env"]
    cmds:
      - go build -o build/grpc-api cmd/grpc-api/main.go
      - ./build/grpc-api

  generate:json-rest-api:main:
    desc: Generate docs and code for the HTTP port from the OpenAPI spec directory
    cmds:
      - task: generate:json-rest-api:single_openapi_config_file
      - task: generate:json-rest-api:docs
      - task: generate:json-rest-api:code

  generate:json-rest-api:single_openapi_config_file:
    cmds:
      - podman run --rm -v ${PWD}:/spec:Z
        redocly/cli bundle
        -o /spec/gen/openapi/openapi.yaml
        /spec/internal/port/json-rest-api/schema/openapi.yaml

  generate:json-rest-api:docs:
    cmds:
      - podman run --rm -v ${PWD}:/spec:Z
        redocly/cli build-docs
        -o /spec/internal/port/json-rest-api/static/docs/index.html
        /spec/internal/port/json-rest-api/schema/openapi.yaml

  generate:json-rest-api:code:
    cmds:
      - go generate gen/ogen/generate.go

  generate:web-app:tailwindcss:
    cmds:
      - npx tailwindcss
        -c internal/port/web-app/tailwind.config.js
        -i internal/port/web-app/static/style/input.css
        -o internal/port/web-app/static/style/style.css

  generate:grpc-api:code:
    cmds:
      - rm -f gen/pb/*.pb.go
        protoc internal/port/grpc-api/proto/*.proto
        --go_out=gen/pb
        --go_opt=paths=source_relative
        --go-grpc_out=gen/pb
        --go-grpc_opt=paths=source_relative
        --proto_path=internal/port/grpc-api/proto

  generate:persistence:code:
    cmds:
      - go generate gen/ent/generate.go

  infrastructure:up:
    cmds:
      - task: infrastructure:run_postgres
      - task: infrastructure:run_redis

  infrastructure:down:
    cmds:
      - podman rm -f flugo-postgres
      - podman rm -f flugo-redis

  infrastructure:run_postgres:
    cmds:
      - podman run
        --name flugo-postgres
        --network flugo-network
        -p 5432:5432
        -e POSTGRES_USER=flugo
        -e POSTGRES_PASSWORD=flugo
        -e POSTGRES_DB=flugo
        -d library/postgres:15-alpine

  infrastructure:run_redis:
    cmds:
      - podman run
        --name flugo-redis
        --network flugo-network
        -p 6379:6379
        -d redis/redis-stack:latest

  image:json-rest-api:build:
    cmds:
      - podman build -t flugo/json-rest-api:latest -f docker/json-rest-api.Dockerfile .

  image:json-rest-api:up:
    cmds:
      - podman run
        --name flugo_json-rest-api
        --network flugo-network
        -p 3010:3010
        -e POSTGRES_URL=postgres://flugo:flugo@flugo-postgres:5432/flugo?sslmode=disable
        -e REDIS_PORT=flugo-redis:6379
        -e REDIS_USER=flugo-redis
        -e REDIS_PASS=
        --env-file env/deploy.env
        localhost/flugo/json-rest-api:latest

  image:json-rest-api:down:
    cmds:
      - podman rm flugo_json-rest-api

  compose:up:
    cmds:
      - podman-compose -f docker/dev.docker-compose.yml --env-file env/dev.env up -d

  compose:down:
    cmds:
      - podman-compose -f docker/dev.docker-compose.yml down

  other:run_evans:
    cmds:
      - evans -p 3030 -r repl
