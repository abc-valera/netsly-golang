# https://taskfile.dev

version: "3"

env:
  GOOSE_MIGRATION_DIR: "internal/persistence/sqlboiler-impl/migration"
  GOOSE_DRIVER: "postgres"
  GOOSE_DBSTRING: "postgres://netsly:netsly@localhost:5432/netsly?sslmode=disable"

vars:
  ENV_FILE_PATH: "env/dev.env"

tasks:
  entrypoint:json-api:
    dotenv: ["{{ .ENV_FILE_PATH }}"]
    cmds:
      - go build -o build/netsly cmd/main.go
      - ./build/netsly -entrypoint json-api

  entrypoint:web-app:
    dotenv: ["{{ .ENV_FILE_PATH }}"]
    cmds:
      - go build -o build/netsly cmd/main.go
      - ./build/netsly -entrypoint web-app

  entrypoint:grpc-api:
    dotenv: ["{{ .ENV_FILE_PATH }}"]
    cmds:
      - go build -o build/netsly cmd/main.go
      - ./build/netsly -entrypoint grpc-api

  entrypoint:seed:
    dotenv: ["{{ .ENV_FILE_PATH }}"]
    cmds:
      - go build -o build/netsly cmd/main.go
      - ./build/netsly -entrypoint seed

  generate:json-api:main:
    desc: Generate docs and code for the HTTP presentation from the OpenAPI spec directory
    cmds:
      - task: generate:json-api:rest:single_openapi_config_file
      - task: generate:json-api:rest:docs
      - task: generate:json-api:rest:code

  generate:json-api:rest:single_openapi_config_file:
    cmds:
      - podman run --rm -v ${PWD}:/spec:Z
        redocly/cli bundle
        -o /spec/gen/openapi/openapi.yaml
        /spec/internal/presentation/json-api/rest/schema/openapi.yaml

  generate:json-api:rest:docs:
    cmds:
      - podman run --rm -v ${PWD}:/spec:Z
        redocly/cli build-docs
        -o /spec/internal/presentation/json-api/static/docs/rest.html
        /spec/internal/presentation/json-api/rest/schema/openapi.yaml

  generate:json-api:rest:code:
    cmds:
      - go generate gen/ogen/generate.go

  generate:web-app:tailwindcss:
    cmds:
      - npx tailwindcss
        -c internal/presentation/web-app/tailwind.config.js
        -i internal/presentation/web-app/static/style/input.css
        -o internal/presentation/web-app/static/style/style.css

  generate:grpc-api:code:
    cmds:
      - protoc internal/presentation/grpc-api/proto/*.proto
        --go_out=gen/pb
        --go_opt=paths=source_relative
        --go-grpc_out=gen/pb
        --go-grpc_opt=paths=source_relative
        --proto_path=internal/presentation/grpc-api/proto

  generate:persistence:migration:
    cmds:
      - goose -s create main sql

  generate:persistence:code:
    cmds:
      - sqlboiler psql -c internal/persistence/sqlboiler-impl/sqlboiler.toml

  infrastructure:up:
    cmds:
      - task: infrastructure:run_postgres
      - task: infrastructure:run_redis

  infrastructure:down:
    cmds:
      - podman rm -f netsly-postgres
      - podman rm -f netsly-redis

  infrastructure:start:
    cmds:
      - podman start netsly-postgres
      - podman start netsly-redis

  infrastructure:stop:
    cmds:
      - podman stop netsly-postgres
      - podman stop netsly-redis

  infrastructure:migrate:
    cmds:
      - goose up

  infrastructure:run_postgres:
    cmds:
      - podman run
        --name netsly-postgres
        --network netsly-network
        -p 5432:5432
        -e POSTGRES_USER=netsly
        -e POSTGRES_PASSWORD=netsly
        -e POSTGRES_DB=netsly
        -d library/postgres:15-alpine

  infrastructure:run_redis:
    cmds:
      - podman run
        --name netsly-redis
        --network netsly-network
        -p 6379:6379
        -d redis/redis-stack:latest

  image:json-api:build:
    cmds:
      - podman build -t netsly/json-api:latest -f docker/json-api.Dockerfile .

  image:json-api:up:
    cmds:
      - podman run
        --name netsly_json-api
        --network netsly-network
        -p 3010:3010
        -e POSTGRES_URL=postgres://netsly:netsly@netsly-postgres:5432/netsly?sslmode=disable
        -e REDIS_PORT=netsly-redis:6379
        -e REDIS_USER=netsly-redis
        -e REDIS_PASS=
        --env-file env/deploy.env
        localhost/netsly/json-api:latest

  image:json-api:down:
    cmds:
      - podman rm netsly_json-api

  compose:up:
    cmds:
      - podman-compose -f docker/dev.docker-compose.yml --env-file env/deploy.env up -d

  compose:down:
    cmds:
      - podman-compose -f docker/dev.docker-compose.yml down

  other:run_evans:
    cmds:
      - evans -p 3030 -r repl
