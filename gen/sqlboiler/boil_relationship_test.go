// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package sqlboiler

import "testing"

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("CommentToJokeUsingJoke", testCommentToOneJokeUsingJoke)
	t.Run("CommentToUserUsingUser", testCommentToOneUserUsingUser)
	t.Run("JokeToUserUsingUser", testJokeToOneUserUsingUser)
	t.Run("LikeToJokeUsingJoke", testLikeToOneJokeUsingJoke)
	t.Run("LikeToUserUsingUser", testLikeToOneUserUsingUser)
	t.Run("RoomToUserUsingCreator", testRoomToOneUserUsingCreator)
	t.Run("RoomMemberToRoomUsingRoom", testRoomMemberToOneRoomUsingRoom)
	t.Run("RoomMemberToUserUsingUser", testRoomMemberToOneUserUsingUser)
	t.Run("RoomMessageToRoomUsingRoom", testRoomMessageToOneRoomUsingRoom)
	t.Run("RoomMessageToUserUsingUser", testRoomMessageToOneUserUsingUser)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("JokeToJokeComments", testJokeToManyJokeComments)
	t.Run("JokeToJokeLikes", testJokeToManyJokeLikes)
	t.Run("RoomToRoomRoomMembers", testRoomToManyRoomRoomMembers)
	t.Run("RoomToRoomRoomMessages", testRoomToManyRoomRoomMessages)
	t.Run("UserToUserComments", testUserToManyUserComments)
	t.Run("UserToUserJokes", testUserToManyUserJokes)
	t.Run("UserToUserLikes", testUserToManyUserLikes)
	t.Run("UserToCreatorRooms", testUserToManyCreatorRooms)
	t.Run("UserToUserRoomMembers", testUserToManyUserRoomMembers)
	t.Run("UserToUserRoomMessages", testUserToManyUserRoomMessages)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("CommentToJokeUsingJokeComments", testCommentToOneSetOpJokeUsingJoke)
	t.Run("CommentToUserUsingUserComments", testCommentToOneSetOpUserUsingUser)
	t.Run("JokeToUserUsingUserJokes", testJokeToOneSetOpUserUsingUser)
	t.Run("LikeToJokeUsingJokeLikes", testLikeToOneSetOpJokeUsingJoke)
	t.Run("LikeToUserUsingUserLikes", testLikeToOneSetOpUserUsingUser)
	t.Run("RoomToUserUsingCreatorRooms", testRoomToOneSetOpUserUsingCreator)
	t.Run("RoomMemberToRoomUsingRoomRoomMembers", testRoomMemberToOneSetOpRoomUsingRoom)
	t.Run("RoomMemberToUserUsingUserRoomMembers", testRoomMemberToOneSetOpUserUsingUser)
	t.Run("RoomMessageToRoomUsingRoomRoomMessages", testRoomMessageToOneSetOpRoomUsingRoom)
	t.Run("RoomMessageToUserUsingUserRoomMessages", testRoomMessageToOneSetOpUserUsingUser)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("JokeToJokeComments", testJokeToManyAddOpJokeComments)
	t.Run("JokeToJokeLikes", testJokeToManyAddOpJokeLikes)
	t.Run("RoomToRoomRoomMembers", testRoomToManyAddOpRoomRoomMembers)
	t.Run("RoomToRoomRoomMessages", testRoomToManyAddOpRoomRoomMessages)
	t.Run("UserToUserComments", testUserToManyAddOpUserComments)
	t.Run("UserToUserJokes", testUserToManyAddOpUserJokes)
	t.Run("UserToUserLikes", testUserToManyAddOpUserLikes)
	t.Run("UserToCreatorRooms", testUserToManyAddOpCreatorRooms)
	t.Run("UserToUserRoomMembers", testUserToManyAddOpUserRoomMembers)
	t.Run("UserToUserRoomMessages", testUserToManyAddOpUserRoomMessages)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {}
